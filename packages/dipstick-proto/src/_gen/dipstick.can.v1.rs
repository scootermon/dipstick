// @generated
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BusEntity {
    #[prost(message, optional, tag="1")]
    pub meta: ::core::option::Option<super::super::core::v1::EntityMeta>,
    #[prost(message, optional, tag="2")]
    pub spec: ::core::option::Option<BusSpec>,
    #[prost(message, optional, tag="3")]
    pub status: ::core::option::Option<BusStatus>,
}
impl ::prost::Name for BusEntity {
const NAME: &'static str = "BusEntity";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BusSpec {
    #[prost(oneof="bus_spec::BusSpecVariant", tags="2")]
    pub bus_spec_variant: ::core::option::Option<bus_spec::BusSpecVariant>,
}
/// Nested message and enum types in `BusSpec`.
pub mod bus_spec {
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum BusSpecVariant {
        #[prost(message, tag="2")]
        Linux(super::LinuxBusSpec),
    }
}
impl ::prost::Name for BusSpec {
const NAME: &'static str = "BusSpec";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LinuxBusSpec {
    #[prost(string, tag="1")]
    pub device: ::prost::alloc::string::String,
    #[prost(uint32, optional, tag="2")]
    pub bitrate: ::core::option::Option<u32>,
}
impl ::prost::Name for LinuxBusSpec {
const NAME: &'static str = "LinuxBusSpec";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BusStatus {
}
impl ::prost::Name for BusStatus {
const NAME: &'static str = "BusStatus";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Id {
    #[prost(uint32, tag="1")]
    pub id: u32,
    #[prost(bool, tag="2")]
    pub extended: bool,
}
impl ::prost::Name for Id {
const NAME: &'static str = "Id";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Frame {
    #[prost(message, optional, tag="3")]
    pub timestamp: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag="1")]
    pub id: ::core::option::Option<Id>,
    #[prost(bytes="bytes", tag="2")]
    pub data: ::prost::bytes::Bytes,
}
impl ::prost::Name for Frame {
const NAME: &'static str = "Frame";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateBusRequest {
    #[prost(message, optional, tag="1")]
    pub meta: ::core::option::Option<super::super::core::v1::EntityMetaSpec>,
    #[prost(message, optional, tag="2")]
    pub spec: ::core::option::Option<BusSpec>,
}
impl ::prost::Name for CreateBusRequest {
const NAME: &'static str = "CreateBusRequest";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateBusResponse {
    #[prost(message, optional, tag="1")]
    pub bus: ::core::option::Option<BusEntity>,
}
impl ::prost::Name for CreateBusResponse {
const NAME: &'static str = "CreateBusResponse";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetBusRequest {
    #[prost(message, optional, tag="1")]
    pub bus: ::core::option::Option<super::super::core::v1::EntitySelector>,
}
impl ::prost::Name for GetBusRequest {
const NAME: &'static str = "GetBusRequest";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetBusResponse {
    #[prost(message, optional, tag="1")]
    pub bus: ::core::option::Option<BusEntity>,
}
impl ::prost::Name for GetBusResponse {
const NAME: &'static str = "GetBusResponse";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SendFrameRequest {
    #[prost(message, optional, tag="1")]
    pub bus: ::core::option::Option<super::super::core::v1::EntitySelector>,
    #[prost(message, optional, tag="2")]
    pub frame: ::core::option::Option<Frame>,
}
impl ::prost::Name for SendFrameRequest {
const NAME: &'static str = "SendFrameRequest";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SendFrameResponse {
}
impl ::prost::Name for SendFrameResponse {
const NAME: &'static str = "SendFrameResponse";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ReceiveFramesRequest {
    #[prost(message, optional, tag="1")]
    pub bus: ::core::option::Option<super::super::core::v1::EntitySelector>,
}
impl ::prost::Name for ReceiveFramesRequest {
const NAME: &'static str = "ReceiveFramesRequest";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ReceiveFramesResponse {
    #[prost(message, optional, tag="1")]
    pub frame: ::core::option::Option<Frame>,
}
impl ::prost::Name for ReceiveFramesResponse {
const NAME: &'static str = "ReceiveFramesResponse";
const PACKAGE: &'static str = "dipstick.can.v1";
fn full_name() -> ::prost::alloc::string::String {
                ::prost::alloc::format!("dipstick.can.v1.{}", Self::NAME)
            }}
/// Encoded file descriptor set for the `dipstick.can.v1` package
pub const FILE_DESCRIPTOR_SET: &[u8] = &[
    0x0a, 0xa7, 0x08, 0x0a, 0x19, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2f, 0x63, 0x61,
    0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
    0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x1a,
    0x1d, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
    0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f,
    0x01, 0x0a, 0x09, 0x42, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x04,
    0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
    0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2c,
    0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64,
    0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42,
    0x75, 0x73, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x32, 0x0a, 0x06,
    0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64,
    0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42,
    0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
    0x22, 0x54, 0x0a, 0x07, 0x42, 0x75, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x35, 0x0a, 0x05, 0x6c,
    0x69, 0x6e, 0x75, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
    0x75, 0x78, 0x42, 0x75, 0x73, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6e,
    0x75, 0x78, 0x42, 0x12, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76,
    0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x42,
    0x75, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
    0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d,
    0x0a, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48,
    0x00, 0x52, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
    0x08, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x42, 0x75, 0x73,
    0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x7d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69,
    0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x42,
    0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0xa2, 0x02, 0x03, 0x44, 0x43, 0x58, 0xaa,
    0x02, 0x0f, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x43, 0x61, 0x6e, 0x2e, 0x56,
    0x31, 0xca, 0x02, 0x0f, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x5c, 0x43, 0x61, 0x6e,
    0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x5c, 0x43,
    0x61, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
    0x61, 0xea, 0x02, 0x11, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x3a, 0x3a, 0x43, 0x61,
    0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x4a, 0xfa, 0x03, 0x0a, 0x06, 0x12, 0x04, 0x00, 0x00, 0x16, 0x14,
    0x0a, 0x08, 0x0a, 0x01, 0x0c, 0x12, 0x03, 0x00, 0x00, 0x12, 0x0a, 0x08, 0x0a, 0x01, 0x02, 0x12,
    0x03, 0x01, 0x00, 0x18, 0x0a, 0x09, 0x0a, 0x02, 0x03, 0x00, 0x12, 0x03, 0x03, 0x00, 0x27, 0x0a,
    0x0a, 0x0a, 0x02, 0x04, 0x00, 0x12, 0x04, 0x05, 0x00, 0x09, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04,
    0x00, 0x01, 0x12, 0x03, 0x05, 0x08, 0x11, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x00, 0x12,
    0x03, 0x06, 0x02, 0x27, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x06, 0x12, 0x03, 0x06,
    0x02, 0x1d, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x01, 0x12, 0x03, 0x06, 0x1e, 0x22,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x03, 0x12, 0x03, 0x06, 0x25, 0x26, 0x0a, 0x0b,
    0x0a, 0x04, 0x04, 0x00, 0x02, 0x01, 0x12, 0x03, 0x07, 0x02, 0x13, 0x0a, 0x0c, 0x0a, 0x05, 0x04,
    0x00, 0x02, 0x01, 0x06, 0x12, 0x03, 0x07, 0x02, 0x09, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02,
    0x01, 0x01, 0x12, 0x03, 0x07, 0x0a, 0x0e, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x03,
    0x12, 0x03, 0x07, 0x11, 0x12, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x02, 0x12, 0x03, 0x08,
    0x02, 0x17, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x02, 0x06, 0x12, 0x03, 0x08, 0x02, 0x0b,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x02, 0x01, 0x12, 0x03, 0x08, 0x0c, 0x12, 0x0a, 0x0c,
    0x0a, 0x05, 0x04, 0x00, 0x02, 0x02, 0x03, 0x12, 0x03, 0x08, 0x15, 0x16, 0x0a, 0x0a, 0x0a, 0x02,
    0x04, 0x01, 0x12, 0x04, 0x0b, 0x00, 0x0f, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x01, 0x01, 0x12,
    0x03, 0x0b, 0x08, 0x0f, 0x0a, 0x0c, 0x0a, 0x04, 0x04, 0x01, 0x08, 0x00, 0x12, 0x04, 0x0c, 0x02,
    0x0e, 0x03, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x01, 0x08, 0x00, 0x01, 0x12, 0x03, 0x0c, 0x08, 0x18,
    0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x01, 0x02, 0x00, 0x12, 0x03, 0x0d, 0x04, 0x1b, 0x0a, 0x0c, 0x0a,
    0x05, 0x04, 0x01, 0x02, 0x00, 0x06, 0x12, 0x03, 0x0d, 0x04, 0x10, 0x0a, 0x0c, 0x0a, 0x05, 0x04,
    0x01, 0x02, 0x00, 0x01, 0x12, 0x03, 0x0d, 0x11, 0x16, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x01, 0x02,
    0x00, 0x03, 0x12, 0x03, 0x0d, 0x19, 0x1a, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x02, 0x12, 0x04, 0x11,
    0x00, 0x14, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x02, 0x01, 0x12, 0x03, 0x11, 0x08, 0x14, 0x0a,
    0x0b, 0x0a, 0x04, 0x04, 0x02, 0x02, 0x00, 0x12, 0x03, 0x12, 0x02, 0x14, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x02, 0x02, 0x00, 0x05, 0x12, 0x03, 0x12, 0x02, 0x08, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x02,
    0x02, 0x00, 0x01, 0x12, 0x03, 0x12, 0x09, 0x0f, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x02, 0x02, 0x00,
    0x03, 0x12, 0x03, 0x12, 0x12, 0x13, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x02, 0x02, 0x01, 0x12, 0x03,
    0x13, 0x02, 0x1e, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x02, 0x02, 0x01, 0x04, 0x12, 0x03, 0x13, 0x02,
    0x0a, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x02, 0x02, 0x01, 0x05, 0x12, 0x03, 0x13, 0x0b, 0x11, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x02, 0x02, 0x01, 0x01, 0x12, 0x03, 0x13, 0x12, 0x19, 0x0a, 0x0c, 0x0a,
    0x05, 0x04, 0x02, 0x02, 0x01, 0x03, 0x12, 0x03, 0x13, 0x1c, 0x1d, 0x0a, 0x09, 0x0a, 0x02, 0x04,
    0x03, 0x12, 0x03, 0x16, 0x00, 0x14, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x03, 0x01, 0x12, 0x03, 0x16,
    0x08, 0x11, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x0a, 0x88, 0x03, 0x0a, 0x18, 0x64,
    0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2f, 0x63, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x69,
    0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63,
    0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x30, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e,
    0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
    0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
    0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x7c, 0x0a, 0x13, 0x63, 0x6f,
    0x6d, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76,
    0x31, 0x42, 0x07, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0xa2, 0x02, 0x03, 0x44,
    0x43, 0x58, 0xaa, 0x02, 0x0f, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x43, 0x61,
    0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x5c,
    0x43, 0x61, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63,
    0x6b, 0x5c, 0x43, 0x61, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
    0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x3a,
    0x3a, 0x43, 0x61, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x4a, 0xa2, 0x01, 0x0a, 0x06, 0x12, 0x04, 0x00,
    0x00, 0x06, 0x01, 0x0a, 0x08, 0x0a, 0x01, 0x0c, 0x12, 0x03, 0x00, 0x00, 0x12, 0x0a, 0x08, 0x0a,
    0x01, 0x02, 0x12, 0x03, 0x01, 0x00, 0x18, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x00, 0x12, 0x04, 0x03,
    0x00, 0x06, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x00, 0x01, 0x12, 0x03, 0x03, 0x08, 0x0a, 0x0a,
    0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x00, 0x12, 0x03, 0x04, 0x02, 0x10, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x00, 0x02, 0x00, 0x05, 0x12, 0x03, 0x04, 0x02, 0x08, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00,
    0x02, 0x00, 0x01, 0x12, 0x03, 0x04, 0x09, 0x0b, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00,
    0x03, 0x12, 0x03, 0x04, 0x0e, 0x0f, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x01, 0x12, 0x03,
    0x05, 0x02, 0x14, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x05, 0x12, 0x03, 0x05, 0x02,
    0x06, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x01, 0x12, 0x03, 0x05, 0x07, 0x0f, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x03, 0x12, 0x03, 0x05, 0x12, 0x13, 0x62, 0x06, 0x70,
    0x72, 0x6f, 0x74, 0x6f, 0x33, 0x0a, 0xe0, 0x04, 0x0a, 0x1b, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69,
    0x63, 0x6b, 0x2f, 0x63, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e,
    0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e,
    0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b,
    0x2f, 0x63, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
    0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
    0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
    0x6f, 0x22, 0x7a, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
    0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
    0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
    0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
    0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
    0x32, 0x13, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e,
    0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
    0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x7f, 0x0a,
    0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61,
    0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
    0x50, 0x01, 0xa2, 0x02, 0x03, 0x44, 0x43, 0x58, 0xaa, 0x02, 0x0f, 0x44, 0x69, 0x70, 0x73, 0x74,
    0x69, 0x63, 0x6b, 0x2e, 0x43, 0x61, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x44, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x5c, 0x43, 0x61, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x44,
    0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x5c, 0x43, 0x61, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47,
    0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x44, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x3a, 0x3a, 0x43, 0x61, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x4a, 0xef,
    0x01, 0x0a, 0x06, 0x12, 0x04, 0x00, 0x00, 0x0a, 0x01, 0x0a, 0x08, 0x0a, 0x01, 0x0c, 0x12, 0x03,
    0x00, 0x00, 0x12, 0x0a, 0x08, 0x0a, 0x01, 0x02, 0x12, 0x03, 0x01, 0x00, 0x18, 0x0a, 0x09, 0x0a,
    0x02, 0x03, 0x00, 0x12, 0x03, 0x03, 0x00, 0x22, 0x0a, 0x09, 0x0a, 0x02, 0x03, 0x01, 0x12, 0x03,
    0x04, 0x00, 0x29, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x00, 0x12, 0x04, 0x06, 0x00, 0x0a, 0x01, 0x0a,
    0x0a, 0x0a, 0x03, 0x04, 0x00, 0x01, 0x12, 0x03, 0x06, 0x08, 0x0d, 0x0a, 0x0b, 0x0a, 0x04, 0x04,
    0x00, 0x02, 0x00, 0x12, 0x03, 0x07, 0x02, 0x2a, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00,
    0x06, 0x12, 0x03, 0x07, 0x02, 0x1b, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x01, 0x12,
    0x03, 0x07, 0x1c, 0x25, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x03, 0x12, 0x03, 0x07,
    0x28, 0x29, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x01, 0x12, 0x03, 0x08, 0x02, 0x0c, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x06, 0x12, 0x03, 0x08, 0x02, 0x04, 0x0a, 0x0c, 0x0a,
    0x05, 0x04, 0x00, 0x02, 0x01, 0x01, 0x12, 0x03, 0x08, 0x05, 0x07, 0x0a, 0x0c, 0x0a, 0x05, 0x04,
    0x00, 0x02, 0x01, 0x03, 0x12, 0x03, 0x08, 0x0a, 0x0b, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02,
    0x02, 0x12, 0x03, 0x09, 0x02, 0x11, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x02, 0x05, 0x12,
    0x03, 0x09, 0x02, 0x07, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x02, 0x01, 0x12, 0x03, 0x09,
    0x08, 0x0c, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x02, 0x03, 0x12, 0x03, 0x09, 0x0f, 0x10,
    0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x0a, 0xc5, 0x11, 0x0a, 0x1d, 0x64, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x2f, 0x63, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72,
    0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x64, 0x69, 0x70, 0x73,
    0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x64, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x2f, 0x63, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73,
    0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b,
    0x2f, 0x63, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
    0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2f, 0x63, 0x6f,
    0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
    0x74, 0x6f, 0x22, 0x76, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x52,
    0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
    0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e,
    0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65,
    0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04,
    0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73,
    0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x41, 0x0a, 0x11, 0x43, 0x72,
    0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
    0x2c, 0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64,
    0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42,
    0x75, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x03, 0x62, 0x75, 0x73, 0x22, 0x43, 0x0a,
    0x0d, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
    0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x69,
    0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
    0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x62,
    0x75, 0x73, 0x22, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
    0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
    0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e,
    0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x03, 0x62,
    0x75, 0x73, 0x22, 0x74, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
    0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x01, 0x20,
    0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63,
    0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c,
    0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x62, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x66, 0x72,
    0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x69, 0x70, 0x73,
    0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x61, 0x6d,
    0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64,
    0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a,
    0x14, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
    0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
    0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x6f,
    0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65,
    0x63, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x62, 0x75, 0x73, 0x22, 0x45, 0x0a, 0x15, 0x52, 0x65, 0x63,
    0x65, 0x69, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
    0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
    0x0b, 0x32, 0x16, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e,
    0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
    0x32, 0xe1, 0x02, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
    0x52, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x64,
    0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
    0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
    0x22, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76,
    0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
    0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x12, 0x1e, 0x2e,
    0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
    0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
    0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
    0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
    0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x64, 0x69,
    0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
    0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
    0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31,
    0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
    0x73, 0x65, 0x12, 0x60, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x72, 0x61,
    0x6d, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x64, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63,
    0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x72, 0x61,
    0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63,
    0x65, 0x69, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
    0x73, 0x65, 0x30, 0x01, 0x42, 0x81, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x70,
    0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x65,
    0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0xa2, 0x02, 0x03, 0x44,
    0x43, 0x58, 0xaa, 0x02, 0x0f, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x2e, 0x43, 0x61,
    0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x5c,
    0x43, 0x61, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63,
    0x6b, 0x5c, 0x43, 0x61, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
    0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x44, 0x69, 0x70, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x3a,
    0x3a, 0x43, 0x61, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x4a, 0xed, 0x07, 0x0a, 0x06, 0x12, 0x04, 0x00,
    0x00, 0x2e, 0x01, 0x0a, 0x08, 0x0a, 0x01, 0x0c, 0x12, 0x03, 0x00, 0x00, 0x12, 0x0a, 0x08, 0x0a,
    0x01, 0x02, 0x12, 0x03, 0x01, 0x00, 0x18, 0x0a, 0x09, 0x0a, 0x02, 0x03, 0x00, 0x12, 0x03, 0x03,
    0x00, 0x23, 0x0a, 0x09, 0x0a, 0x02, 0x03, 0x01, 0x12, 0x03, 0x04, 0x00, 0x25, 0x0a, 0x09, 0x0a,
    0x02, 0x03, 0x02, 0x12, 0x03, 0x05, 0x00, 0x27, 0x0a, 0x0a, 0x0a, 0x02, 0x06, 0x00, 0x12, 0x04,
    0x07, 0x00, 0x0e, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x06, 0x00, 0x01, 0x12, 0x03, 0x07, 0x08, 0x12,
    0x0a, 0x0b, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x00, 0x12, 0x03, 0x08, 0x02, 0x3e, 0x0a, 0x0c, 0x0a,
    0x05, 0x06, 0x00, 0x02, 0x00, 0x01, 0x12, 0x03, 0x08, 0x06, 0x0f, 0x0a, 0x0c, 0x0a, 0x05, 0x06,
    0x00, 0x02, 0x00, 0x02, 0x12, 0x03, 0x08, 0x10, 0x20, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02,
    0x00, 0x03, 0x12, 0x03, 0x08, 0x2b, 0x3c, 0x0a, 0x0b, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x01, 0x12,
    0x03, 0x0a, 0x02, 0x35, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x01, 0x01, 0x12, 0x03, 0x0a,
    0x06, 0x0c, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x01, 0x02, 0x12, 0x03, 0x0a, 0x0d, 0x1a,
    0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x01, 0x03, 0x12, 0x03, 0x0a, 0x25, 0x33, 0x0a, 0x0b,
    0x0a, 0x04, 0x06, 0x00, 0x02, 0x02, 0x12, 0x03, 0x0c, 0x02, 0x3e, 0x0a, 0x0c, 0x0a, 0x05, 0x06,
    0x00, 0x02, 0x02, 0x01, 0x12, 0x03, 0x0c, 0x06, 0x0f, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02,
    0x02, 0x02, 0x12, 0x03, 0x0c, 0x10, 0x20, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x02, 0x03,
    0x12, 0x03, 0x0c, 0x2b, 0x3c, 0x0a, 0x0b, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x03, 0x12, 0x03, 0x0d,
    0x02, 0x51, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x03, 0x01, 0x12, 0x03, 0x0d, 0x06, 0x13,
    0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x03, 0x02, 0x12, 0x03, 0x0d, 0x14, 0x28, 0x0a, 0x0c,
    0x0a, 0x05, 0x06, 0x00, 0x02, 0x03, 0x06, 0x12, 0x03, 0x0d, 0x33, 0x39, 0x0a, 0x0c, 0x0a, 0x05,
    0x06, 0x00, 0x02, 0x03, 0x03, 0x12, 0x03, 0x0d, 0x3a, 0x4f, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x00,
    0x12, 0x04, 0x10, 0x00, 0x13, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x00, 0x01, 0x12, 0x03, 0x10,
    0x08, 0x18, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x00, 0x12, 0x03, 0x11, 0x02, 0x2b, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x06, 0x12, 0x03, 0x11, 0x02, 0x21, 0x0a, 0x0c, 0x0a,
    0x05, 0x04, 0x00, 0x02, 0x00, 0x01, 0x12, 0x03, 0x11, 0x22, 0x26, 0x0a, 0x0c, 0x0a, 0x05, 0x04,
    0x00, 0x02, 0x00, 0x03, 0x12, 0x03, 0x11, 0x29, 0x2a, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02,
    0x01, 0x12, 0x03, 0x12, 0x02, 0x13, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x06, 0x12,
    0x03, 0x12, 0x02, 0x09, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x01, 0x12, 0x03, 0x12,
    0x0a, 0x0e, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x03, 0x12, 0x03, 0x12, 0x11, 0x12,
    0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x01, 0x12, 0x04, 0x15, 0x00, 0x17, 0x01, 0x0a, 0x0a, 0x0a, 0x03,
    0x04, 0x01, 0x01, 0x12, 0x03, 0x15, 0x08, 0x19, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x01, 0x02, 0x00,
    0x12, 0x03, 0x16, 0x02, 0x14, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x01, 0x02, 0x00, 0x06, 0x12, 0x03,
    0x16, 0x02, 0x0b, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x01, 0x02, 0x00, 0x01, 0x12, 0x03, 0x16, 0x0c,
    0x0f, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x01, 0x02, 0x00, 0x03, 0x12, 0x03, 0x16, 0x12, 0x13, 0x0a,
    0x0a, 0x0a, 0x02, 0x04, 0x02, 0x12, 0x04, 0x19, 0x00, 0x1b, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04,
    0x02, 0x01, 0x12, 0x03, 0x19, 0x08, 0x15, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x02, 0x02, 0x00, 0x12,
    0x03, 0x1a, 0x02, 0x2a, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x02, 0x02, 0x00, 0x06, 0x12, 0x03, 0x1a,
    0x02, 0x21, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x02, 0x02, 0x00, 0x01, 0x12, 0x03, 0x1a, 0x22, 0x25,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x02, 0x02, 0x00, 0x03, 0x12, 0x03, 0x1a, 0x28, 0x29, 0x0a, 0x0a,
    0x0a, 0x02, 0x04, 0x03, 0x12, 0x04, 0x1d, 0x00, 0x1f, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x03,
    0x01, 0x12, 0x03, 0x1d, 0x08, 0x16, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x03, 0x02, 0x00, 0x12, 0x03,
    0x1e, 0x02, 0x14, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x03, 0x02, 0x00, 0x06, 0x12, 0x03, 0x1e, 0x02,
    0x0b, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x03, 0x02, 0x00, 0x01, 0x12, 0x03, 0x1e, 0x0c, 0x0f, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x03, 0x02, 0x00, 0x03, 0x12, 0x03, 0x1e, 0x12, 0x13, 0x0a, 0x0a, 0x0a,
    0x02, 0x04, 0x04, 0x12, 0x04, 0x21, 0x00, 0x24, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x04, 0x01,
    0x12, 0x03, 0x21, 0x08, 0x18, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x04, 0x02, 0x00, 0x12, 0x03, 0x22,
    0x02, 0x2a, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x00, 0x06, 0x12, 0x03, 0x22, 0x02, 0x21,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x00, 0x01, 0x12, 0x03, 0x22, 0x22, 0x25, 0x0a, 0x0c,
    0x0a, 0x05, 0x04, 0x04, 0x02, 0x00, 0x03, 0x12, 0x03, 0x22, 0x28, 0x29, 0x0a, 0x0b, 0x0a, 0x04,
    0x04, 0x04, 0x02, 0x01, 0x12, 0x03, 0x23, 0x02, 0x12, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02,
    0x01, 0x06, 0x12, 0x03, 0x23, 0x02, 0x07, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x01, 0x01,
    0x12, 0x03, 0x23, 0x08, 0x0d, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x01, 0x03, 0x12, 0x03,
    0x23, 0x10, 0x11, 0x0a, 0x09, 0x0a, 0x02, 0x04, 0x05, 0x12, 0x03, 0x26, 0x00, 0x1c, 0x0a, 0x0a,
    0x0a, 0x03, 0x04, 0x05, 0x01, 0x12, 0x03, 0x26, 0x08, 0x19, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x06,
    0x12, 0x04, 0x28, 0x00, 0x2a, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x06, 0x01, 0x12, 0x03, 0x28,
    0x08, 0x1c, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x06, 0x02, 0x00, 0x12, 0x03, 0x29, 0x02, 0x2a, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x06, 0x02, 0x00, 0x06, 0x12, 0x03, 0x29, 0x02, 0x21, 0x0a, 0x0c, 0x0a,
    0x05, 0x04, 0x06, 0x02, 0x00, 0x01, 0x12, 0x03, 0x29, 0x22, 0x25, 0x0a, 0x0c, 0x0a, 0x05, 0x04,
    0x06, 0x02, 0x00, 0x03, 0x12, 0x03, 0x29, 0x28, 0x29, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x07, 0x12,
    0x04, 0x2c, 0x00, 0x2e, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x07, 0x01, 0x12, 0x03, 0x2c, 0x08,
    0x1d, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x07, 0x02, 0x00, 0x12, 0x03, 0x2d, 0x02, 0x12, 0x0a, 0x0c,
    0x0a, 0x05, 0x04, 0x07, 0x02, 0x00, 0x06, 0x12, 0x03, 0x2d, 0x02, 0x07, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x07, 0x02, 0x00, 0x01, 0x12, 0x03, 0x2d, 0x08, 0x0d, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x07,
    0x02, 0x00, 0x03, 0x12, 0x03, 0x2d, 0x10, 0x11, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
];
include!("dipstick.can.v1.tonic.rs");
// @@protoc_insertion_point(module)