syntax = "proto3";
package dipstick.can.v1;

import "dipstick/can/v1/driver.proto";
import "dipstick/can/v1/frame.proto";
import "dipstick/can/v1/socket.proto";

// CAN service
service CanService {
  // Lists all available drivers.
  rpc ListDrivers(ListDriversRequest) returns (ListDriversResponse);

  // Creates a new CAN socket.
  rpc CreateSocket(CreateSocketRequest) returns (CreateSocketResponse);

  // Sends a single CAN frame.
  rpc SendFrame(SendFrameRequest) returns (SendFrameResponse);
}

// ListDrivers request
message ListDriversRequest {
  // Optional driver ID to filter the list of drivers.
  string id = 1;
}

// ListDrivers response
message ListDriversResponse {
  // List of drivers.
  repeated DriverInfo drivers = 1;
}

// CreateSocket request
message CreateSocketRequest {}

// CreateSocket response
message CreateSocketResponse {
  // Socket info.
  SocketInfo socket = 1;
}

// SendFrame request
message SendFrameRequest {
  // Socket id to send the frame to.
  uint64 socket_id = 1;
  // CAN frame to send.
  Frame frame = 2;
}

// SendFrame response
message SendFrameResponse {}
