syntax = "proto3";
package dipstick.can.v1;

import "dipstick/can/v1/driver.proto";
import "dipstick/can/v1/frame.proto";
import "dipstick/can/v1/interface.proto";

// CAN service
service CanService {
  // List all available drivers.
  rpc DriverList(DriverListRequest) returns (DriverListResponse);

  // Opens a new CAN interface.
  rpc InterfaceOpen(InterfaceOpenRequest) returns (InterfaceOpenResponse);

  // Send a single CAN frame.
  rpc SendCanFrame(SendCanFrameRequest) returns (SendCanFrameResponse);
}

// DriverList request
message DriverListRequest {
  // Optional driver ID to filter the list of drivers.
  string id = 1;
}
// DriverList response
message DriverListResponse {
  // List of drivers.
  repeated DriverInfo drivers = 1;
}

// InterfaceOpen request
message InterfaceOpenRequest {}
// InterfaceOpen response
message InterfaceOpenResponse {
  // Interface info.
  InterfaceInfo interface = 1;
}

// SendCanFrame request
message SendCanFrameRequest {
  // Interface id to send the frame to.
  uint64 interface_id = 1;
  // CAN frame to send.
  Frame frame = 2;
}
// SendCanFrame response
message SendCanFrameResponse {}
